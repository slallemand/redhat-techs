---
- name: create VM on OpenShift Virt
  hosts: localhost
  connection: local
  gather_facts: no
  collections:
    - redhat.openshift
    - kubevirt.core

  tasks:

  - name: Log in (obtain access token)
    redhat.openshift.openshift_auth:
      host: "{{ lookup('env', 'K8S_AUTH_HOST') }}"
      username: "{{ lookup('env', 'K8S_AUTH_USERNAME') }}"
      password: "{{ lookup('env', 'K8S_AUTH_PASSWORD') }}"
      validate_certs: false
    register: openshift_auth_results

  - name: List VMs on OpenShift Virtualization
    kubevirt.core.kubevirt_vm_info:
      host: "{{ lookup('env', 'K8S_AUTH_HOST') }}"
      api_key: "{{ openshift_auth_results.openshift_auth.api_key }}"
      validate_certs: false
      namespace: vms-demo
    register: result
    
  - name: Set list vms by name
    ansible.builtin.set_fact:
      vms_list: "{{ result | json_query('resources[*].metadata.name') }}"

  - name: Print listed VMs
    ansible.builtin.debug:
        var: vms_list

  - name: Delete VirtualMachine on OCP vms-demo namespace
    kubevirt.core.kubevirt_vm:
      host: "{{ lookup('env', 'K8S_AUTH_HOST') }}"
      api_key: "{{ openshift_auth_results.openshift_auth.api_key }}"
      validate_certs: false
      state: absent
      name: "{{ item }}"
      namespace: vms-demo
    loop: "{{ vms_list }}"

  - name: Delete Route for Cockpit VMs
    redhat.openshift.k8s:
      host: "{{ lookup('env', 'K8S_AUTH_HOST') }}"
      api_key: "{{ openshift_auth_results.openshift_auth.api_key }}"
      validate_certs: false
      state: absent
      api_version: v1
      kind: Route
      name: "{{ item }}"
      namespace: vms-demo
    loop: "{{ vms_list }}"

  - name: Delete Service for Cockpit VMs
    redhat.openshift.k8s:
      host: "{{ lookup('env', 'K8S_AUTH_HOST') }}"
      api_key: "{{ openshift_auth_results.openshift_auth.api_key }}"
      validate_certs: false
      state: absent
      api_version: v1
      kind: Service
      name: "{{ item }}"
      namespace: vms-demo
    loop: "{{ vms_list }}"

  - name: If login succeeded, try to log out (revoke access token)
    when: openshift_auth_results.openshift_auth.api_key is defined
    redhat.openshift.openshift_auth:
      state: absent
      host: "{{ lookup('env', 'K8S_AUTH_HOST') }}"
      api_key: "{{ openshift_auth_results.openshift_auth.api_key }}"
      validate_certs: false