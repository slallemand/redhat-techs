---
- name: delete Nutanix VMs
  hosts: localhost
  connection: local
  gather_facts: no
  collections:
    - nutanix.ncp
  module_defaults:
    group/nutanix.ncp.ntnx:
      nutanix_host: "{{ nutanix_host }}"
      nutanix_username: "{{ nutanix_username }}"
      nutanix_password: "{{ nutanix_password }}"
      validate_certs: false

  tasks:

    - when: env_delete == 'dev' or env_delete == 'qualif' or env_delete == 'prod'
      name: List env VMs on Nutanix
      nutanix.ncp.ntnx_vms_info:
        filter:
         vm_name: ".*{{ env_delete }}-.*"
      register: vms

#    - when: env_delete == 'all'
#      name: List all VMs on Nutanix
#      nutanix.ncp.ntnx_vms_info:
#        filter:
#         vm_name: ".*-demoaap-.*"
#      register: vms   

#    - name: Set list vms by name
#      ansible.builtin.set_fact:
#        uuid_vms_list: "{{ vms.response | json_query('entities[*].metadata.uuid') }}"

    - name: Print VMs
      ansible.builtin.debug:
        var: vms

#    - name: Delete Nutanix VMs
#      nutanix.ncp.ntnx_vms:
#        state: absent
#        vm_uuid: "{{ item }}"
#      loop: "{{ uuid_vms_list }}"
#      register: vms_delete
#      when: uuid_vms_list | length > 0